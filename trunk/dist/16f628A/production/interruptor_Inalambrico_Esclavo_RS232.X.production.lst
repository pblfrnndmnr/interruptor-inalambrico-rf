

Microchip Technology PIC PRO Macro Assembler V1.21 build 54009 
                                                                                               Fri Jun  6 16:20:17 2014

Microchip Technology Omniscient Code Generator (PRO mode) build 54009
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  0086                     	;# 
    50  008C                     	;# 
    51  008E                     	;# 
    52  0092                     	;# 
    53  0098                     	;# 
    54  0099                     	;# 
    55  009A                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009F                     	;# 
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0092                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009F                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0092                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0092                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009F                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0092                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001F                     	;# 
   232  0081                     	;# 
   233  0085                     	;# 
   234  0086                     	;# 
   235  008C                     	;# 
   236  008E                     	;# 
   237  0092                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009F                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  008C                     	;# 
   273  008E                     	;# 
   274  0092                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009F                     	;# 
   282  001F                     _CMCON	set	31
   283  000B                     _INTCONbits	set	11
   284  000C                     _PIR1bits	set	12
   285  0005                     _PORTA	set	5
   286  0006                     _PORTB	set	6
   287  0006                     _PORTBbits	set	6
   288  001A                     _RCREG	set	26
   289  0018                     _RCSTAbits	set	24
   290  0001                     _TMR0	set	1
   291  0030                     _RB0	set	48
   292  0081                     _OPTION_REGbits	set	129
   293  008E                     _PCONbits	set	142
   294  008C                     _PIE1bits	set	140
   295  0099                     _SPBRG	set	153
   296  0085                     _TRISA	set	133
   297  0086                     _TRISB	set	134
   298  0098                     _TXSTAbits	set	152
   299                           
   300                           	psect	text0
   301  0000                     __ptext0:	
   302                           
   303                           ;psect for function _getch
   304                           ; #config settings
   305  0000                     
   306                           	psect	cinit
   307  000D                     start_initialization:	
   308  000D                     __initialization:	
   309                           
   310                           ; Clear objects allocated to COMMON
   311  000D  01F6               	clrf	__pbssCOMMON& (0+127)
   312  000E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   313                           
   314                           ; Clear objects allocated to BANK0
   315  000F  01CC               	clrf	__pbssBANK0& (0+127)
   316  0010  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   317  0011  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   318  0012  01CF               	clrf	(__pbssBANK0+3)& (0+127)
   319  0013  01D0               	clrf	(__pbssBANK0+4)& (0+127)
   320  0014  01D1               	clrf	(__pbssBANK0+5)& (0+127)
   321  0015  01D2               	clrf	(__pbssBANK0+6)& (0+127)
   322  0016  01D3               	clrf	(__pbssBANK0+7)& (0+127)
   323  0017                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0017                     __end_of__initialization:	
   327  0017  0183               	clrf	3
   328  0018  2928               	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0076                     __pbssCOMMON:	
   332  0076                     _indice_de_dato:	
   333  0076                     	ds	1
   334  0077                     _pasaron_20ms:	
   335  0077                     	ds	1
   336                           
   337                           	psect	bssBANK0
   338  004C                     __pbssBANK0:	
   339  004C                     _Bandera_estado_llave:	
   340  004C                     	ds	1
   341  004D                     _recibi_datos:	
   342  004D                     	ds	1
   343  004E                     _cadenarecibida:	
   344  004E                     	ds	6
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:	
   348  0070                     ??_getch:	
   349  0070                     ?_ConfigureOscillator:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_InitApp:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_configura_USART:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_isr:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ??_isr:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_main:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?_getch:	
   368                           ; 0 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	5
   373  0075                     isr@datosrecibidos:	
   374                           
   375                           ; 1 bytes @ 0x5
   376  0075                     	ds	1
   377  0076                     ??_ConfigureOscillator:	
   378  0076                     ??_InitApp:	
   379                           ; 0 bytes @ 0x6
   380                           
   381  0076                     ??_configura_USART:	
   382                           ; 0 bytes @ 0x6
   383                           
   384  0076                     ??_calcula_mensaje_crc:	
   385                           ; 0 bytes @ 0x6
   386                           
   387  0076                     ??_strlen:	
   388                           ; 0 bytes @ 0x6
   389                           
   390  0076                     ??_CRC16:	
   391                           ; 0 bytes @ 0x6
   392                           
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:	
   396                           ; 0 bytes @ 0x6
   397                           
   398  0020                     ?_strlen:	
   399  0020                     ?_CRC16:	
   400                           ; 2 bytes @ 0x0
   401                           
   402  0020                     CRC16@poly:	
   403                           ; 4 bytes @ 0x0
   404                           
   405                           
   406                           ; 4 bytes @ 0x0
   407  0020                     	ds	3
   408  0023                     strlen@s:	
   409                           
   410                           ; 1 bytes @ 0x3
   411  0023                     	ds	1
   412  0024                     strlen@cp:	
   413  0024                     CRC16@init_value:	
   414                           ; 1 bytes @ 0x4
   415                           
   416                           
   417                           ; 4 bytes @ 0x4
   418  0024                     	ds	4
   419  0028                     CRC16@exit_value:	
   420                           
   421                           ; 4 bytes @ 0x8
   422  0028                     	ds	4
   423  002C                     CRC16@value:	
   424                           
   425                           ; 1 bytes @ 0xC
   426  002C                     	ds	1
   427  002D                     CRC16@i:	
   428                           
   429                           ; 4 bytes @ 0xD
   430  002D                     	ds	4
   431  0031                     CRC16@res:	
   432                           
   433                           ; 4 bytes @ 0x11
   434  0031                     	ds	4
   435  0035                     ?_calcula_CRC16:	
   436  0035                     calcula_CRC16@polinomio:	
   437                           ; 2 bytes @ 0x15
   438                           
   439                           
   440                           ; 4 bytes @ 0x15
   441  0035                     	ds	4
   442  0039                     calcula_CRC16@inival:	
   443                           
   444                           ; 4 bytes @ 0x19
   445  0039                     	ds	4
   446  003D                     ??_calcula_CRC16:	
   447                           
   448                           ; 0 bytes @ 0x1D
   449  003D                     	ds	2
   450  003F                     calcula_CRC16@datos:	
   451                           
   452                           ; 1 bytes @ 0x1F
   453  003F                     	ds	1
   454  0040                     calcula_CRC16@aux:	
   455                           
   456                           ; 2 bytes @ 0x20
   457  0040                     	ds	2
   458  0042                     calcula_CRC16@i:	
   459                           
   460                           ; 2 bytes @ 0x22
   461  0042                     	ds	2
   462  0044                     ?_calcula_mensaje_crc:	
   463                           
   464                           ; 2 bytes @ 0x24
   465  0044                     	ds	3
   466  0047                     calcula_mensaje_crc@packet_ptr:	
   467                           
   468                           ; 1 bytes @ 0x27
   469  0047                     	ds	1
   470  0048                     calcula_mensaje_crc@CRC:	
   471                           
   472                           ; 2 bytes @ 0x28
   473  0048                     	ds	2
   474  004A                     ??_main:	
   475                           
   476                           ; 0 bytes @ 0x2A
   477  004A                     	ds	2
   478                           
   479                           	psect	maintext
   480  0128                     __pmaintext:	
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 56 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;		None               void
   493 ;; Registers used:
   494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 17F/0
   497 ;;		On exit  : 60/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   500 ;;      Params:         0       0       0       0
   501 ;;      Locals:         0       0       0       0
   502 ;;      Temps:          0       2       0       0
   503 ;;      Totals:         0       2       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels required when called:    5
   506 ;; This function calls:
   507 ;;		_ConfigureOscillator
   508 ;;		_InitApp
   509 ;;		_configura_USART
   510 ;;		_calcula_mensaje_crc
   511 ;; This function is called by:
   512 ;;		Startup code after reset
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _main
   518  0128                     _main:	
   519                           
   520                           ;main.c: 59: ConfigureOscillator();
   521                           
   522                           ;incstack = 0
   523                           ; Regs used in _main: [allreg]
   524  0128  21AB               	fcall	_ConfigureOscillator
   525                           
   526                           ;main.c: 60: _delay((unsigned long)((20)*(20000000UL/4000.0)));
   527  0129  3082               	movlw	130
   528  012A  1283               	bcf	3,5	;RP0=0, select bank0
   529  012B  00CB               	movwf	??_main+1
   530  012C  30DD               	movlw	221
   531  012D  00CA               	movwf	??_main
   532  012E                     u527:	
   533  012E  0BCA               	decfsz	??_main,f
   534  012F  292E               	goto	u527
   535  0130  0BCB               	decfsz	??_main+1,f
   536  0131  292E               	goto	u527
   537  0132  2933               	nop2
   538                           
   539                           ;main.c: 62: InitApp();
   540  0133  2159               	fcall	_InitApp
   541                           
   542                           ;main.c: 64: configura_USART ();
   543  0134  21A1               	fcall	_configura_USART
   544  0135                     l1168:	
   545                           
   546                           ;main.c: 69: {
   547                           ;main.c: 71: if (Bandera_estado_llave){
   548  0135  084C               	movf	_Bandera_estado_llave,w
   549  0136  1903               	btfsc	3,2
   550  0137  2943               	goto	l1174
   551                           
   552                           ;main.c: 72: Bandera_estado_llave=0;
   553  0138  01CC               	clrf	_Bandera_estado_llave
   554                           
   555                           ;main.c: 73: PORTBbits.RB3=~PORTBbits.RB3;
   556  0139  1003               	clrc
   557  013A  1D86               	btfss	6,3	;volatile
   558  013B  1403               	setc
   559  013C  1283               	bcf	3,5	;RP0=0, select bank0
   560  013D  1303               	bcf	3,6	;RP1=0, select bank0
   561  013E  1C03               	btfss	3,0
   562  013F  2942               	goto	L1
   563  0140  1586               	bsf	6,3	;volatile
   564  0141  2943               	goto	l1174
   565  0142                     L1:	
   566  0142  1186               	bcf	6,3	;volatile
   567  0143                     l1174:	
   568                           
   569                           ;main.c: 74: }
   570                           ;main.c: 75: if (recibi_datos){
   571  0143  084D               	movf	_recibi_datos,w
   572  0144  1903               	btfsc	3,2
   573  0145  2935               	goto	l1168
   574  0146  304E               	movlw	_cadenarecibida& (0+255)
   575                           
   576                           ;main.c: 77: recibi_datos=0;
   577  0147  01CD               	clrf	_recibi_datos
   578                           
   579                           ;main.c: 78: indice_de_dato=0;
   580  0148  01F6               	clrf	_indice_de_dato
   581                           
   582                           ;main.c: 80: if (calcula_mensaje_crc(cadenarecibida)==0){
   583  0149  217A               	fcall	_calcula_mensaje_crc
   584  014A  0845               	movf	?_calcula_mensaje_crc+1,w
   585  014B  0444               	iorwf	?_calcula_mensaje_crc,w
   586  014C  1D03               	skipz
   587  014D  2935               	goto	l1168
   588                           
   589                           ;main.c: 81: PORTBbits.RB3=~PORTBbits.RB3;
   590  014E  1003               	clrc
   591  014F  1D86               	btfss	6,3	;volatile
   592  0150  1403               	setc
   593  0151  1283               	bcf	3,5	;RP0=0, select bank0
   594  0152  1303               	bcf	3,6	;RP1=0, select bank0
   595  0153  1C03               	btfss	3,0
   596  0154  2957               	goto	L2
   597  0155  1586               	bsf	6,3	;volatile
   598  0156  2935               	goto	l1168
   599  0157                     L2:	
   600  0157  1186               	bcf	6,3	;volatile
   601  0158  2935               	goto	l1168
   602  0159                     __end_of_main:	
   603                           
   604                           	psect	text1
   605  017A                     __ptext1:	
   606 ;; *************** function _calcula_mensaje_crc *****************
   607 ;; Defined at:
   608 ;;		line 70 in file "uso_crc_maestro.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  packet_ptr      1    wreg     PTR unsigned char 
   611 ;;		 -> cadenarecibida(6), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  packet_ptr      1   39[BANK0 ] PTR unsigned char 
   614 ;;		 -> cadenarecibida(6), 
   615 ;;  CRC             2   40[BANK0 ] unsigned int 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  2   36[BANK0 ] int 
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 60/0
   622 ;;		On exit  : 160/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   625 ;;      Params:         0       3       0       0
   626 ;;      Locals:         0       3       0       0
   627 ;;      Temps:          0       0       0       0
   628 ;;      Totals:         0       6       0       0
   629 ;;Total ram usage:        6 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    4
   632 ;; This function calls:
   633 ;;		_calcula_CRC16
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _calcula_mensaje_crc
   641  017A                     _calcula_mensaje_crc:	
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _calcula_mensaje_crc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   645                           ;calcula_mensaje_crc@packet_ptr stored from wreg
   646  017A  00C7               	movwf	calcula_mensaje_crc@packet_ptr
   647                           
   648                           ;uso_crc_maestro.c: 72: unsigned int CRC;
   649                           ;uso_crc_maestro.c: 75: CRC=calcula_CRC16(packet_ptr,0xA001,0x0000);
   650  017B  30A0               	movlw	160
   651  017C  01B8               	clrf	?_calcula_CRC16+3
   652  017D  01B7               	clrf	?_calcula_CRC16+2
   653  017E  00B6               	movwf	?_calcula_CRC16+1
   654  017F  3001               	movlw	1
   655  0180  00B5               	movwf	?_calcula_CRC16
   656  0181  01B9               	clrf	?_calcula_CRC16+4
   657  0182  01BA               	clrf	?_calcula_CRC16+5
   658  0183  01BB               	clrf	?_calcula_CRC16+6
   659  0184  01BC               	clrf	?_calcula_CRC16+7
   660  0185  0847               	movf	calcula_mensaje_crc@packet_ptr,w
   661  0186  2019               	fcall	_calcula_CRC16
   662  0187  0836               	movf	?_calcula_CRC16+1,w
   663  0188  00C9               	movwf	calcula_mensaje_crc@CRC+1
   664  0189  0835               	movf	?_calcula_CRC16,w
   665  018A  00C8               	movwf	calcula_mensaje_crc@CRC
   666                           
   667                           ;uso_crc_maestro.c: 77: return CRC;
   668  018B  0849               	movf	calcula_mensaje_crc@CRC+1,w
   669  018C  00C5               	movwf	?_calcula_mensaje_crc+1
   670  018D  0848               	movf	calcula_mensaje_crc@CRC,w
   671  018E  00C4               	movwf	?_calcula_mensaje_crc
   672  018F  0008               	return
   673  0190                     __end_of_calcula_mensaje_crc:	
   674                           
   675                           	psect	text2
   676  0019                     __ptext2:	
   677 ;; *************** function _calcula_CRC16 *****************
   678 ;; Defined at:
   679 ;;		line 125 in file "uso_crc_maestro.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  datos           1    wreg     PTR unsigned char 
   682 ;;		 -> cadenarecibida(6), 
   683 ;;  polinomio       4   21[BANK0 ] long 
   684 ;;  inival          4   25[BANK0 ] long 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  datos           1   31[BANK0 ] PTR unsigned char 
   687 ;;		 -> cadenarecibida(6), 
   688 ;;  aux             2   32[BANK0 ] unsigned int 
   689 ;;  i               2   34[BANK0 ] int 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2   21[BANK0 ] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 60/0
   696 ;;		On exit  : 160/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   699 ;;      Params:         0       8       0       0
   700 ;;      Locals:         0       5       0       0
   701 ;;      Temps:          0       2       0       0
   702 ;;      Totals:         0      15       0       0
   703 ;;Total ram usage:       15 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    3
   706 ;; This function calls:
   707 ;;		_CRC16
   708 ;;		_strlen
   709 ;; This function is called by:
   710 ;;		_calcula_mensaje_crc
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _calcula_CRC16
   716  0019                     _calcula_CRC16:	
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _calcula_CRC16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   720                           ;calcula_CRC16@datos stored from wreg
   721  0019  00BF               	movwf	calcula_CRC16@datos
   722                           
   723                           ;uso_crc_maestro.c: 127: int i;
   724                           ;uso_crc_maestro.c: 129: for(i=0;i<strlen(datos);i++){
   725  001A  01C2               	clrf	calcula_CRC16@i
   726  001B  01C3               	clrf	calcula_CRC16@i+1
   727  001C                     l1194:	
   728  001C  083F               	movf	calcula_CRC16@datos,w
   729  001D  2190               	fcall	_strlen
   730  001E  0821               	movf	?_strlen+1,w
   731  001F  0243               	subwf	calcula_CRC16@i+1,w
   732  0020  1D03               	skipz
   733  0021  2824               	goto	u505
   734  0022  0820               	movf	?_strlen,w
   735  0023  0242               	subwf	calcula_CRC16@i,w
   736  0024                     u505:	
   737                           
   738                           ;uso_crc_maestro.c: 130: inival=CRC16(datos[i],polinomio,inival,0x0000);
   739  0024  0838               	movf	calcula_CRC16@polinomio+3,w
   740  0025  1803               	btfsc	3,0
   741  0026  2860               	goto	L3
   742  0027  00A3               	movwf	?_CRC16+3
   743  0028  0837               	movf	calcula_CRC16@polinomio+2,w
   744  0029  00A2               	movwf	?_CRC16+2
   745  002A  0836               	movf	calcula_CRC16@polinomio+1,w
   746  002B  00A1               	movwf	?_CRC16+1
   747  002C  0835               	movf	calcula_CRC16@polinomio,w
   748  002D  00A0               	movwf	?_CRC16
   749  002E  083C               	movf	calcula_CRC16@inival+3,w
   750  002F  00A7               	movwf	?_CRC16+7
   751  0030  083B               	movf	calcula_CRC16@inival+2,w
   752  0031  00A6               	movwf	?_CRC16+6
   753  0032  083A               	movf	calcula_CRC16@inival+1,w
   754  0033  00A5               	movwf	?_CRC16+5
   755  0034  0839               	movf	calcula_CRC16@inival,w
   756  0035  00A4               	movwf	?_CRC16+4
   757  0036  01A8               	clrf	?_CRC16+8
   758  0037  01A9               	clrf	?_CRC16+9
   759  0038  01AA               	clrf	?_CRC16+10
   760  0039  01AB               	clrf	?_CRC16+11
   761  003A  0842               	movf	calcula_CRC16@i,w
   762  003B  073F               	addwf	calcula_CRC16@datos,w
   763  003C  00BD               	movwf	??_calcula_CRC16
   764  003D  0084               	movwf	4
   765  003E  0800               	movf	0,w
   766  003F  20D7               	fcall	_CRC16
   767  0040  0823               	movf	?_CRC16+3,w
   768  0041  00BC               	movwf	calcula_CRC16@inival+3
   769  0042  0822               	movf	?_CRC16+2,w
   770  0043  00BB               	movwf	calcula_CRC16@inival+2
   771  0044  0821               	movf	?_CRC16+1,w
   772  0045  00BA               	movwf	calcula_CRC16@inival+1
   773  0046  0820               	movf	?_CRC16,w
   774  0047  00B9               	movwf	calcula_CRC16@inival
   775  0048  0AC2               	incf	calcula_CRC16@i,f
   776  0049  1903               	skipnz
   777  004A  0AC3               	incf	calcula_CRC16@i+1,f
   778  004B  281C               	goto	l1194
   779  004C                     l1196:	
   780                           
   781                           ;uso_crc_maestro.c: 134: inival^=0xFFFF;
   782  004C  30FF               	movlw	255
   783  004D  06B9               	xorwf	calcula_CRC16@inival,f
   784  004E  06BA               	xorwf	calcula_CRC16@inival+1,f
   785                           
   786                           ;uso_crc_maestro.c: 135: unsigned int aux;
   787                           ;uso_crc_maestro.c: 136: aux=(unsigned int)inival;
   788  004F  083A               	movf	calcula_CRC16@inival+1,w
   789  0050  00C1               	movwf	calcula_CRC16@aux+1
   790  0051  0839               	movf	calcula_CRC16@inival,w
   791  0052  00C0               	movwf	calcula_CRC16@aux
   792                           
   793                           ;uso_crc_maestro.c: 137: inival=(long)((aux<<8)+(aux>>8));
   794  0053  00BE               	movwf	??_calcula_CRC16+1
   795  0054  01BD               	clrf	??_calcula_CRC16
   796  0055  0841               	movf	calcula_CRC16@aux+1,w
   797  0056  073D               	addwf	??_calcula_CRC16,w
   798  0057  00B9               	movwf	calcula_CRC16@inival
   799  0058  3000               	movlw	0
   800  0059  1803               	skipnc
   801  005A  3001               	movlw	1
   802  005B  073E               	addwf	??_calcula_CRC16+1,w
   803  005C  00BA               	movwf	calcula_CRC16@inival+1
   804  005D  01BB               	clrf	calcula_CRC16@inival+2
   805  005E  01BC               	clrf	calcula_CRC16@inival+3
   806                           
   807                           ;uso_crc_maestro.c: 139: break;
   808  005F  2873               	goto	l1204
   809  0060                     L3:	
   810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   811                           ; Switch size 1, requested type "speed"
   812                           ; Number of cases is 1, Range of values is 0 to 0
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte            4     3 (average)
   816                           ; direct_byte            7     6 (fixed)
   817                           ; jumptable            260     6 (fixed)
   818                           ;	Chosen strategy is simple_byte
   819                           
   820  0060  3A00               	xorlw	0	; case 0
   821  0061  1903               	skipnz
   822  0062  286E               	goto	l1328
   823  0063  2873               	goto	l1204
   824  0064                     l1326:	
   825                           
   826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   827                           ; Switch size 1, requested type "speed"
   828                           ; Number of cases is 1, Range of values is 166 to 166
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte            4     3 (average)
   832                           ; direct_byte           10     9 (fixed)
   833                           ; jumptable            263     9 (fixed)
   834                           ;	Chosen strategy is simple_byte
   835  0064  0836               	movf	calcula_CRC16@polinomio+1,w
   836  0065  3AA6               	xorlw	166	; case 166
   837  0066  1903               	skipnz
   838  0067  2869               	goto	l1330
   839  0068  2873               	goto	l1204
   840  0069                     l1330:	
   841                           
   842                           ; Switch size 1, requested type "speed"
   843                           ; Number of cases is 1, Range of values is 188 to 188
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte            4     3 (average)
   847                           ; direct_byte           10     9 (fixed)
   848                           ; jumptable            263     9 (fixed)
   849                           ;	Chosen strategy is simple_byte
   850  0069  0835               	movf	calcula_CRC16@polinomio,w
   851  006A  3ABC               	xorlw	188	; case 188
   852  006B  1903               	skipnz
   853  006C  284C               	goto	l1196
   854  006D  2873               	goto	l1204
   855  006E                     l1328:	
   856                           
   857                           ; Switch size 1, requested type "speed"
   858                           ; Number of cases is 1, Range of values is 0 to 0
   859                           ; switch strategies available:
   860                           ; Name         Instructions Cycles
   861                           ; simple_byte            4     3 (average)
   862                           ; direct_byte            7     6 (fixed)
   863                           ; jumptable            260     6 (fixed)
   864                           ;	Chosen strategy is simple_byte
   865  006E  0837               	movf	calcula_CRC16@polinomio+2,w
   866  006F  3A00               	xorlw	0	; case 0
   867  0070  1903               	skipnz
   868  0071  2864               	goto	l1326
   869  0072  2873               	goto	l1204
   870  0073                     l1204:	
   871                           
   872                           ;uso_crc_maestro.c: 145: return inival;
   873  0073  083A               	movf	calcula_CRC16@inival+1,w
   874  0074  00B6               	movwf	?_calcula_CRC16+1
   875  0075  0839               	movf	calcula_CRC16@inival,w
   876  0076  00B5               	movwf	?_calcula_CRC16
   877  0077  0008               	return
   878  0078                     __end_of_calcula_CRC16:	
   879                           
   880                           	psect	text3
   881  0190                     __ptext3:	
   882 ;; *************** function _strlen *****************
   883 ;; Defined at:
   884 ;;		line 5 in file "/opt/microchip/xc8/v1.21/sources/common/strlen.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  s               1    wreg     PTR const unsigned char 
   887 ;;		 -> cadenarecibida(6), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  s               1    3[BANK0 ] PTR const unsigned char 
   890 ;;		 -> cadenarecibida(6), 
   891 ;;  cp              1    4[BANK0 ] PTR const unsigned char 
   892 ;;		 -> cadenarecibida(6), 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    0[BANK0 ] unsigned int 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 60/0
   899 ;;		On exit  : 160/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   902 ;;      Params:         0       3       0       0
   903 ;;      Locals:         0       2       0       0
   904 ;;      Temps:          0       0       0       0
   905 ;;      Totals:         0       5       0       0
   906 ;;Total ram usage:        5 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    2
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_calcula_CRC16
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _strlen
   918  0190                     _strlen:	
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   922                           ;strlen@s stored from wreg
   923  0190  00A3               	movwf	strlen@s
   924  0191  00A4               	movwf	strlen@cp
   925  0192                     l1230:	
   926  0192  0824               	movf	strlen@cp,w
   927  0193  0084               	movwf	4
   928  0194  1383               	bcf	3,7	;select IRP bank0
   929  0195  0880               	movf	0,f
   930  0196  1903               	btfsc	3,2
   931  0197  299A               	goto	l1232
   932  0198  0AA4               	incf	strlen@cp,f
   933  0199  2992               	goto	l1230
   934  019A                     l1232:	
   935  019A  0823               	movf	strlen@s,w
   936  019B  0224               	subwf	strlen@cp,w
   937  019C  00A0               	movwf	?_strlen
   938  019D  01A1               	clrf	?_strlen+1
   939  019E  1BA0               	btfsc	?_strlen,7
   940  019F  03A1               	decf	?_strlen+1,f
   941  01A0  0008               	return
   942  01A1                     __end_of_strlen:	
   943                           
   944                           	psect	text4
   945  00D7                     __ptext4:	
   946 ;; *************** function _CRC16 *****************
   947 ;; Defined at:
   948 ;;		line 104 in file "uso_crc_maestro.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  value           1    wreg     unsigned char 
   951 ;;  poly            4    0[BANK0 ] long 
   952 ;;  init_value      4    4[BANK0 ] long 
   953 ;;  exit_value      4    8[BANK0 ] long 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  value           1   12[BANK0 ] unsigned char 
   956 ;;  res             4   17[BANK0 ] long 
   957 ;;  i               4   13[BANK0 ] long 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  4    0[BANK0 ] long 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, btemp+1
   962 ;; Tracked objects:
   963 ;;		On entry : 160/0
   964 ;;		On exit  : 160/0
   965 ;;		Unchanged: 100/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   967 ;;      Params:         0      12       0       0
   968 ;;      Locals:         0       9       0       0
   969 ;;      Temps:          0       0       0       0
   970 ;;      Totals:         0      21       0       0
   971 ;;Total ram usage:       21 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    2
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_calcula_CRC16
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _CRC16
   983  00D7                     _CRC16:	
   984                           
   985                           ;incstack = 0
   986                           ; Regs used in _CRC16: [wreg+status,2+status,0+btemp+1]
   987                           ;CRC16@value stored from wreg
   988  00D7  00AC               	movwf	CRC16@value
   989                           
   990                           ;uso_crc_maestro.c: 105: long res;
   991                           ;uso_crc_maestro.c: 106: long i;
   992                           ;uso_crc_maestro.c: 108: res=value;
   993  00D8  00B1               	movwf	CRC16@res
   994  00D9  01B2               	clrf	CRC16@res+1
   995  00DA  01B3               	clrf	CRC16@res+2
   996  00DB  01B4               	clrf	CRC16@res+3
   997                           
   998                           ;uso_crc_maestro.c: 110: res^=init_value;
   999  00DC  0824               	movf	CRC16@init_value,w
  1000  00DD  06B1               	xorwf	CRC16@res,f
  1001  00DE  0825               	movf	CRC16@init_value+1,w
  1002  00DF  06B2               	xorwf	CRC16@res+1,f
  1003  00E0  0826               	movf	CRC16@init_value+2,w
  1004  00E1  06B3               	xorwf	CRC16@res+2,f
  1005  00E2  0827               	movf	CRC16@init_value+3,w
  1006  00E3  06B4               	xorwf	CRC16@res+3,f
  1007                           
  1008                           ;uso_crc_maestro.c: 112: for(i=0;i<8;i++){
  1009  00E4  01AD               	clrf	CRC16@i
  1010  00E5  01AE               	clrf	CRC16@i+1
  1011  00E6  01AF               	clrf	CRC16@i+2
  1012  00E7  01B0               	clrf	CRC16@i+3
  1013  00E8                     l155:	
  1014                           
  1015                           ;uso_crc_maestro.c: 113: if(res & 1){
  1016  00E8  1C31               	btfss	CRC16@res,0
  1017  00E9  28F8               	goto	l1006
  1018                           
  1019                           ;uso_crc_maestro.c: 114: res>>= 1;
  1020  00EA  0D34               	rlf	CRC16@res+3,w
  1021  00EB  0CB4               	rrf	CRC16@res+3,f
  1022  00EC  0CB3               	rrf	CRC16@res+2,f
  1023  00ED  0CB2               	rrf	CRC16@res+1,f
  1024  00EE  0CB1               	rrf	CRC16@res,f
  1025                           
  1026                           ;uso_crc_maestro.c: 115: res^=poly;
  1027  00EF  0820               	movf	CRC16@poly,w
  1028  00F0  06B1               	xorwf	CRC16@res,f
  1029  00F1  0821               	movf	CRC16@poly+1,w
  1030  00F2  06B2               	xorwf	CRC16@res+1,f
  1031  00F3  0822               	movf	CRC16@poly+2,w
  1032  00F4  06B3               	xorwf	CRC16@res+2,f
  1033  00F5  0823               	movf	CRC16@poly+3,w
  1034  00F6  06B4               	xorwf	CRC16@res+3,f
  1035                           
  1036                           ;uso_crc_maestro.c: 116: }else{
  1037  00F7  28FD               	goto	l1008
  1038  00F8                     l1006:	
  1039                           
  1040                           ;uso_crc_maestro.c: 117: res>>= 1;
  1041  00F8  0D34               	rlf	CRC16@res+3,w
  1042  00F9  0CB4               	rrf	CRC16@res+3,f
  1043  00FA  0CB3               	rrf	CRC16@res+2,f
  1044  00FB  0CB2               	rrf	CRC16@res+1,f
  1045  00FC  0CB1               	rrf	CRC16@res,f
  1046  00FD                     l1008:	
  1047  00FD  0AAD               	incf	CRC16@i,f
  1048  00FE  1903               	skipnz
  1049  00FF  0AAE               	incf	CRC16@i+1,f
  1050  0100  1903               	skipnz
  1051  0101  0AAF               	incf	CRC16@i+2,f
  1052  0102  1903               	skipnz
  1053  0103  0AB0               	incf	CRC16@i+3,f
  1054  0104  0830               	movf	CRC16@i+3,w
  1055  0105  3A80               	xorlw	128
  1056  0106  00FF               	movwf	127
  1057  0107  3080               	movlw	128
  1058  0108  027F               	subwf	127,w
  1059  0109  1D03               	skipz
  1060  010A  2915               	goto	u323
  1061  010B  3000               	movlw	0
  1062  010C  022F               	subwf	CRC16@i+2,w
  1063  010D  1D03               	skipz
  1064  010E  2915               	goto	u323
  1065  010F  3000               	movlw	0
  1066  0110  022E               	subwf	CRC16@i+1,w
  1067  0111  1D03               	skipz
  1068  0112  2915               	goto	u323
  1069  0113  3008               	movlw	8
  1070  0114  022D               	subwf	CRC16@i,w
  1071  0115                     u323:	
  1072  0115  1C03               	skipc
  1073  0116  28E8               	goto	l155
  1074                           
  1075                           ;uso_crc_maestro.c: 118: }
  1076                           ;uso_crc_maestro.c: 119: }
  1077                           ;uso_crc_maestro.c: 120: res^=exit_value;
  1078  0117  0828               	movf	CRC16@exit_value,w
  1079  0118  06B1               	xorwf	CRC16@res,f
  1080  0119  0829               	movf	CRC16@exit_value+1,w
  1081  011A  06B2               	xorwf	CRC16@res+1,f
  1082  011B  082A               	movf	CRC16@exit_value+2,w
  1083  011C  06B3               	xorwf	CRC16@res+2,f
  1084  011D  082B               	movf	CRC16@exit_value+3,w
  1085  011E  06B4               	xorwf	CRC16@res+3,f
  1086                           
  1087                           ;uso_crc_maestro.c: 121: return res;
  1088  011F  0834               	movf	CRC16@res+3,w
  1089  0120  00A3               	movwf	?_CRC16+3
  1090  0121  0833               	movf	CRC16@res+2,w
  1091  0122  00A2               	movwf	?_CRC16+2
  1092  0123  0832               	movf	CRC16@res+1,w
  1093  0124  00A1               	movwf	?_CRC16+1
  1094  0125  0831               	movf	CRC16@res,w
  1095  0126  00A0               	movwf	?_CRC16
  1096  0127  0008               	return
  1097  0128                     __end_of_CRC16:	
  1098                           
  1099                           	psect	text5
  1100  01A1                     __ptext5:	
  1101 ;; *************** function _configura_USART *****************
  1102 ;; Defined at:
  1103 ;;		line 14 in file "usart1.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg
  1112 ;; Tracked objects:
  1113 ;;		On entry : 60/20
  1114 ;;		On exit  : 60/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1117 ;;      Params:         0       0       0       0
  1118 ;;      Locals:         0       0       0       0
  1119 ;;      Temps:          0       0       0       0
  1120 ;;      Totals:         0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _configura_USART
  1133  01A1                     _configura_USART:	
  1134                           
  1135                           ;usart1.c: 28: SPBRG= 20000000UL/64/2400-1;
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _configura_USART: [wreg]
  1139  01A1  3081               	movlw	129
  1140  01A2  0099               	movwf	25	;volatile
  1141                           
  1142                           ;usart1.c: 39: RCSTAbits.RX9=0;
  1143  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1144  01A4  1318               	bcf	24,6	;volatile
  1145                           
  1146                           ;usart1.c: 40: TXSTAbits.SYNC=0;
  1147  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1148  01A6  1218               	bcf	24,4	;volatile
  1149                           
  1150                           ;usart1.c: 58: RCSTAbits.CREN=1;
  1151  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1152  01A8  1618               	bsf	24,4	;volatile
  1153                           
  1154                           ;usart1.c: 59: RCSTAbits.SPEN=1;
  1155  01A9  1798               	bsf	24,7	;volatile
  1156  01AA  0008               	return
  1157  01AB                     __end_of_configura_USART:	
  1158                           
  1159                           	psect	text6
  1160  0159                     __ptext6:	
  1161 ;; *************** function _InitApp *****************
  1162 ;; Defined at:
  1163 ;;		line 23 in file "user.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;		None               void
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/20
  1174 ;;		On exit  : 60/20
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1177 ;;      Params:         0       0       0       0
  1178 ;;      Locals:         0       0       0       0
  1179 ;;      Temps:          0       0       0       0
  1180 ;;      Totals:         0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    2
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _InitApp
  1193  0159                     _InitApp:	
  1194                           
  1195                           ;user.c: 26: PORTB=0b00000000;
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _InitApp: [wreg+status,2+status,0]
  1199  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1200  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1201  015B  0186               	clrf	6	;volatile
  1202                           
  1203                           ;user.c: 28: PORTA=0b00000000;
  1204  015C  0185               	clrf	5	;volatile
  1205                           
  1206                           ;user.c: 34: TRISB=0b00000011;
  1207  015D  3003               	movlw	3
  1208  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1209  015F  0086               	movwf	6	;volatile
  1210                           
  1211                           ;user.c: 35: CMCON=0x00000111;
  1212  0160  3011               	movlw	17
  1213  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0162  009F               	movwf	31	;volatile
  1215                           
  1216                           ;user.c: 37: TRISA=0b00000000;
  1217  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0164  0185               	clrf	5	;volatile
  1219                           
  1220                           ;user.c: 46: OPTION_REGbits.PS=0b111;
  1221  0165  3007               	movlw	7
  1222  0166  0481               	iorwf	1,f	;volatile
  1223                           
  1224                           ;user.c: 47: OPTION_REGbits.PSA=0;
  1225  0167  1181               	bcf	1,3	;volatile
  1226                           
  1227                           ;user.c: 48: OPTION_REGbits.T0CS=0;
  1228  0168  1281               	bcf	1,5	;volatile
  1229                           
  1230                           ;user.c: 49: OPTION_REGbits.T0SE=0;
  1231  0169  1201               	bcf	1,4	;volatile
  1232                           
  1233                           ;user.c: 50: OPTION_REGbits.nRBPU=0;
  1234  016A  1381               	bcf	1,7	;volatile
  1235                           
  1236                           ;user.c: 51: OPTION_REGbits.INTEDG=1;
  1237  016B  1701               	bsf	1,6	;volatile
  1238                           
  1239                           ;user.c: 56: PIE1bits.RCIE=1;
  1240  016C  168C               	bsf	12,5	;volatile
  1241                           
  1242                           ;user.c: 58: INTCONbits.PEIE=1;
  1243  016D  170B               	bsf	11,6	;volatile
  1244                           
  1245                           ;user.c: 60: INTCONbits.GIE=1;
  1246  016E  178B               	bsf	11,7	;volatile
  1247                           
  1248                           ;user.c: 63: if (PORTBbits.RB0==1){
  1249  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0170  1C06               	btfss	6,0	;volatile
  1251  0171  2975               	goto	l104
  1252                           
  1253                           ;user.c: 64: OPTION_REGbits.INTEDG=0;
  1254  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0173  1301               	bcf	1,6	;volatile
  1256                           
  1257                           ;user.c: 65: }else{
  1258  0174  2977               	goto	l105
  1259  0175                     l104:	
  1260                           
  1261                           ;user.c: 66: OPTION_REGbits.INTEDG=1;
  1262  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0176  1701               	bsf	1,6	;volatile
  1264  0177                     l105:	
  1265                           
  1266                           ;user.c: 67: }
  1267                           ;user.c: 68: INTCONbits.INTF=0;
  1268  0177  108B               	bcf	11,1	;volatile
  1269                           
  1270                           ;user.c: 69: INTCONbits.INTE=1;
  1271  0178  160B               	bsf	11,4	;volatile
  1272  0179  0008               	return
  1273  017A                     __end_of_InitApp:	
  1274                           
  1275                           	psect	text7
  1276  01AB                     __ptext7:	
  1277 ;; *************** function _ConfigureOscillator *****************
  1278 ;; Defined at:
  1279 ;;		line 19 in file "system.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;		None               void
  1286 ;; Registers used:
  1287 ;;		None
  1288 ;; Tracked objects:
  1289 ;;		On entry : 17F/0
  1290 ;;		On exit  : 17F/20
  1291 ;;		Unchanged: 11F/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1293 ;;      Params:         0       0       0       0
  1294 ;;      Locals:         0       0       0       0
  1295 ;;      Temps:          0       0       0       0
  1296 ;;      Totals:         0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _ConfigureOscillator
  1309  01AB                     _ConfigureOscillator:	
  1310                           
  1311                           ;system.c: 20: PCONbits.OSCF=0;
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _ConfigureOscillator: []
  1315  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1316  01AC  118E               	bcf	14,3	;volatile
  1317  01AD  0008               	return
  1318  01AE                     __end_of_ConfigureOscillator:	
  1319                           
  1320                           	psect	text8
  1321  0078                     __ptext8:	
  1322 ;; *************** function _isr *****************
  1323 ;; Defined at:
  1324 ;;		line 25 in file "interrupts.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  datosrecibid    1    5[COMMON] volatile unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;		None               void
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 60/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1338 ;;      Params:         0       0       0       0
  1339 ;;      Locals:         1       0       0       0
  1340 ;;      Temps:          5       0       0       0
  1341 ;;      Totals:         6       0       0       0
  1342 ;;Total ram usage:        6 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    1
  1345 ;; This function calls:
  1346 ;;		_getch
  1347 ;; This function is called by:
  1348 ;;		Interrupt level 1
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _isr
  1354  0078                     _isr:	
  1355                           
  1356                           ;interrupts.c: 28: if(INTCONbits.INTF==1&&INTCONbits.INTE==1){
  1357  0078  188B               	btfsc	11,1	;volatile
  1358  0079  1E0B               	btfss	11,4	;volatile
  1359  007A  2883               	goto	i1l25
  1360                           
  1361                           ;interrupts.c: 39: TMR0=60;
  1362  007B  303C               	movlw	60
  1363  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1364  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1365  007E  0081               	movwf	1	;volatile
  1366                           
  1367                           ;interrupts.c: 40: INTCONbits.T0IF=0;
  1368  007F  110B               	bcf	11,2	;volatile
  1369                           
  1370                           ;interrupts.c: 41: INTCONbits.T0IE=1;
  1371  0080  168B               	bsf	11,5	;volatile
  1372                           
  1373                           ;interrupts.c: 44: INTCONbits.INTF=0;
  1374  0081  108B               	bcf	11,1	;volatile
  1375                           
  1376                           ;interrupts.c: 48: }else{
  1377  0082  28CE               	goto	i1l37
  1378  0083                     i1l25:	
  1379                           
  1380                           ;interrupts.c: 49: if (PIR1bits.RCIF){
  1381  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0085  1E8C               	btfss	12,5	;volatile
  1384  0086  28A1               	goto	i1l27
  1385                           
  1386                           ;interrupts.c: 64: volatile unsigned char datosrecibidos;
  1387                           ;interrupts.c: 65: datosrecibidos=getch();
  1388  0087  21AE               	fcall	_getch
  1389  0088  00F5               	movwf	isr@datosrecibidos	;volatile
  1390                           
  1391                           ;interrupts.c: 66: if (indice_de_dato<4){
  1392  0089  3004               	movlw	4
  1393  008A  0276               	subwf	_indice_de_dato,w
  1394  008B  1803               	skipnc
  1395  008C  2895               	goto	i1l28
  1396                           
  1397                           ;interrupts.c: 67: cadenarecibida[indice_de_dato]=datosrecibidos;
  1398  008D  0876               	movf	_indice_de_dato,w
  1399  008E  3E4E               	addlw	_cadenarecibida& (0+255)
  1400  008F  0084               	movwf	4
  1401  0090  0875               	movf	isr@datosrecibidos,w	;volatile
  1402  0091  1383               	bcf	3,7	;select IRP bank0
  1403  0092  0080               	movwf	0
  1404                           
  1405                           ;interrupts.c: 68: indice_de_dato++;
  1406  0093  0AF6               	incf	_indice_de_dato,f
  1407                           
  1408                           ;interrupts.c: 69: } else {
  1409  0094  2897               	goto	i1l1046
  1410  0095                     i1l28:	
  1411                           
  1412                           ;interrupts.c: 70: recibi_datos=1;
  1413  0095  01CD               	clrf	_recibi_datos
  1414  0096  0ACD               	incf	_recibi_datos,f
  1415  0097                     i1l1046:	
  1416                           
  1417                           ;interrupts.c: 71: }
  1418                           ;interrupts.c: 72: if (datosrecibidos=='\n'){
  1419  0097  0875               	movf	isr@datosrecibidos,w
  1420  0098  3A0A               	xorlw	10
  1421  0099  1903               	btfsc	3,2
  1422                           
  1423                           ;interrupts.c: 73: indice_de_dato=0;
  1424  009A  01F6               	clrf	_indice_de_dato
  1425                           
  1426                           ;interrupts.c: 74: }
  1427                           ;interrupts.c: 75: if (datosrecibidos=='\r'){
  1428  009B  0875               	movf	isr@datosrecibidos,w
  1429  009C  3A0D               	xorlw	13
  1430  009D  1D03               	skipz
  1431  009E  28CE               	goto	i1l37
  1432                           
  1433                           ;interrupts.c: 76: indice_de_dato=0;
  1434  009F  01F6               	clrf	_indice_de_dato
  1435  00A0  28CE               	goto	i1l37
  1436  00A1                     i1l27:	
  1437                           
  1438                           ;interrupts.c: 79: if(INTCONbits.T0IF){
  1439  00A1  1D0B               	btfss	11,2	;volatile
  1440  00A2  28CE               	goto	i1l37
  1441                           
  1442                           ;interrupts.c: 81: if (pasaron_20ms){
  1443  00A3  0877               	movf	_pasaron_20ms,w
  1444  00A4  1903               	btfsc	3,2
  1445  00A5  28C9               	goto	i1l34
  1446                           
  1447                           ;interrupts.c: 82: if(RB0==OPTION_REGbits.INTEDG){
  1448  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1449  00A7  0E01               	swapf	1,w	;volatile
  1450  00A8  00F0               	movwf	??_isr
  1451  00A9  0CF0               	rrf	??_isr,f
  1452  00AA  0C70               	rrf	??_isr,w
  1453  00AB  3901               	andlw	1
  1454  00AC  00F1               	movwf	??_isr+1
  1455  00AD  3000               	movlw	0
  1456  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1457  00AF  1806               	btfsc	6,0	;volatile
  1458  00B0  3001               	movlw	1
  1459  00B1  0671               	xorwf	??_isr+1,w
  1460  00B2  1D03               	skipz
  1461  00B3  28C6               	goto	i1l1066
  1462                           
  1463                           ;interrupts.c: 83: OPTION_REGbits.INTEDG= !OPTION_REGbits.INTEDG;
  1464  00B4  3000               	movlw	0
  1465  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1466  00B6  1F01               	btfss	1,6	;volatile
  1467  00B7  3001               	movlw	1
  1468  00B8  00F0               	movwf	??_isr
  1469  00B9  0EF0               	swapf	??_isr,f
  1470  00BA  0DF0               	rlf	??_isr,f
  1471  00BB  0DF0               	rlf	??_isr,f
  1472  00BC  0801               	movf	1,w	;volatile
  1473  00BD  0670               	xorwf	??_isr,w
  1474  00BE  39BF               	andlw	-65
  1475  00BF  0670               	xorwf	??_isr,w
  1476  00C0  0081               	movwf	1	;volatile
  1477                           
  1478                           ;interrupts.c: 84: Bandera_estado_llave=1;
  1479  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1480  00C2  01CC               	clrf	_Bandera_estado_llave
  1481  00C3  0ACC               	incf	_Bandera_estado_llave,f
  1482                           
  1483                           ;interrupts.c: 85: INTCONbits.INTF=0;
  1484  00C4  108B               	bcf	11,1	;volatile
  1485                           
  1486                           ;interrupts.c: 86: INTCONbits.INTE=1;
  1487  00C5  160B               	bsf	11,4	;volatile
  1488  00C6                     i1l1066:	
  1489                           
  1490                           ;interrupts.c: 87: }
  1491                           ;interrupts.c: 88: pasaron_20ms=0;
  1492  00C6  01F7               	clrf	_pasaron_20ms
  1493                           
  1494                           ;interrupts.c: 89: INTCONbits.T0IE=0;
  1495  00C7  128B               	bcf	11,5	;volatile
  1496                           
  1497                           ;interrupts.c: 91: }
  1498  00C8  28CB               	goto	i1l1070
  1499  00C9                     i1l34:	
  1500                           
  1501                           ;interrupts.c: 92: else {
  1502                           ;interrupts.c: 93: pasaron_20ms=1;
  1503  00C9  01F7               	clrf	_pasaron_20ms
  1504  00CA  0AF7               	incf	_pasaron_20ms,f
  1505  00CB                     i1l1070:	
  1506                           
  1507                           ;interrupts.c: 95: }
  1508                           ;interrupts.c: 96: TMR0=60;
  1509  00CB  303C               	movlw	60
  1510  00CC  0081               	movwf	1	;volatile
  1511                           
  1512                           ;interrupts.c: 97: INTCONbits.T0IF=0;
  1513  00CD  110B               	bcf	11,2	;volatile
  1514  00CE                     i1l37:	
  1515  00CE  0874               	movf	??_isr+4,w
  1516  00CF  008A               	movwf	10
  1517  00D0  0873               	movf	??_isr+3,w
  1518  00D1  0084               	movwf	4
  1519  00D2  0E72               	swapf	(??_isr+2)^(0+-128),w
  1520  00D3  0083               	movwf	3
  1521  00D4  0EFE               	swapf	126,f
  1522  00D5  0E7E               	swapf	126,w
  1523  00D6  0009               	retfie
  1524  00D7                     __end_of_isr:	
  1525                           
  1526                           	psect	intentry
  1527  0004                     __pintentry:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1530                           
  1531  0004                     interrupt_function:	
  1532  007E                     saved_w	set	btemp
  1533  0004  00FE               	movwf	btemp
  1534  0005  0E03               	swapf	3,w
  1535  0006  00F2               	movwf	??_isr+2
  1536  0007  0804               	movf	4,w
  1537  0008  00F3               	movwf	??_isr+3
  1538  0009  080A               	movf	10,w
  1539  000A  00F4               	movwf	??_isr+4
  1540  000B  2878               	ljmp	_isr
  1541                           
  1542                           	psect	text9
  1543  01AE                     __ptext9:	
  1544 ;; *************** function _getch *****************
  1545 ;; Defined at:
  1546 ;;		line 69 in file "usart1.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg
  1555 ;; Tracked objects:
  1556 ;;		On entry : 60/0
  1557 ;;		On exit  : 60/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1560 ;;      Params:         0       0       0       0
  1561 ;;      Locals:         0       0       0       0
  1562 ;;      Temps:          0       0       0       0
  1563 ;;      Totals:         0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_isr
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _getch
  1575  01AE                     _getch:	
  1576                           
  1577                           ;usart1.c: 70: return RCREG;
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _getch: [wreg]
  1581  01AE  081A               	movf	26,w	;volatile
  1582  01AF  0008               	return
  1583  01B0                     __end_of_getch:	
  1584  007E                     btemp	set	126	;btemp
  1585  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     44      52
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    ?_strlen	unsigned int  size(1) Largest target is 6
		 -> cadenarecibida(BANK0[6]), 

    ?_CRC16	long  size(1) Largest target is 0

    ?_calcula_CRC16	int  size(1) Largest target is 0

    ?_calcula_mensaje_crc	int  size(1) Largest target is 0

    strlen@s	PTR const unsigned char  size(1) Largest target is 6
		 -> cadenarecibida(BANK0[6]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 6
		 -> cadenarecibida(BANK0[6]), 

    calcula_CRC16@datos	PTR unsigned char  size(1) Largest target is 6
		 -> cadenarecibida(BANK0[6]), 

    calcula_mensaje_crc@packet_ptr	PTR unsigned char  size(1) Largest target is 6
		 -> cadenarecibida(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_calcula_mensaje_crc
    _calcula_mensaje_crc->_calcula_CRC16
    _calcula_CRC16->_CRC16

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     738
                                             42 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                    _configura_USART
                _calcula_mensaje_crc
 ---------------------------------------------------------------------------------
 (1) _calcula_mensaje_crc                                  6     3      3     738
                                             36 BANK0      6     3      3
                      _calcula_CRC16
 ---------------------------------------------------------------------------------
 (2) _calcula_CRC16                                       15     7      8     673
                                             21 BANK0     15     7      8
                              _CRC16
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     2      3     130
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _CRC16                                               21     9     12     184
                                              0 BANK0     21     9     12
 ---------------------------------------------------------------------------------
 (1) _configura_USART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0      67
                                              0 COMMON     6     6      0
                              _getch
 ---------------------------------------------------------------------------------
 (5) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _configura_USART
   _calcula_mensaje_crc
     _calcula_CRC16
       _CRC16
       _strlen

 _isr (ROOT)
   _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       7       2        0.0%
BANK0               50     2C      34       3       65.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      43      10        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Jun  6 16:20:17 2014

                  __CFG_CP$OFF 0000                            l104 0175                            l105 0177  
                          l155 00E8                            _RB0 0030                            u323 0115  
                          u505 0024                   __CFG_CPD$OFF 0000                            u527 012E  
                          _isr 0078                            fsr0 0004                            indf 0000  
                 __CFG_LVP$OFF 0000               ?_configura_USART 0070                           l1006 00F8  
                         l1008 00FD                           l1204 0073                           l1230 0192  
                         l1232 019A                           l1330 0069                           l1326 0064  
                         l1174 0143                           l1328 006E                           l1168 0135  
                         l1194 001C                           l1196 004C                           ?_isr 0070  
                         i1l25 0083                           i1l34 00C9                           i1l27 00A1  
                         i1l28 0095                           i1l37 00CE                           _TMR0 0001  
                         _main 0128                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 000C                  __CFG_MCLRE$ON 0000               calcula_CRC16@aux 0040  
              __end_of_InitApp 017A                          ??_isr 0070                          ?_main 0070  
                        _CRC16 00D7                  __CFG_WDTE$OFF 0000                          _CMCON 001F  
                        _RCREG 001A                          _SPBRG 0099                          _PORTA 0005  
                        _PORTB 0006                          _TRISA 0085                          _TRISB 0086  
          _ConfigureOscillator 01AB                  __CFG_PWRTE$ON 0000           _Bandera_estado_llave 004C  
                        _getch 01AE                          pclath 000A                          status 0003  
                        wtemp0 007E           ?_ConfigureOscillator 0070                __initialization 000D  
                 __end_of_main 0159                         CRC16@i 002D                         ??_main 004A  
                       ?_CRC16 0020                         ?_getch 0070                         i1l1070 00CB  
                       i1l1046 0097                         i1l1066 00C6                      CRC16@poly 0020  
                    ??_InitApp 0076          ??_ConfigureOscillator 0076                         _strlen 0190  
                       saved_w 007E                 _indice_de_dato 0076        __end_of__initialization 0017  
                __end_of_CRC16 0128                 calcula_CRC16@i 0042                 __pcstackCOMMON 0070  
           calcula_CRC16@datos 003F                  __end_of_getch 01B0                        ??_CRC16 0076  
calcula_mensaje_crc@packet_ptr 0047                 _OPTION_REGbits 0081                        ??_getch 0070  
  __end_of_calcula_mensaje_crc 0190                     __pbssBANK0 004C         __size_of_calcula_CRC16 005F  
                   __pmaintext 0128                     __pintentry 0004                        ?_strlen 0020  
                   CRC16@value 002C                        _InitApp 0159       __size_of_configura_USART 000A  
                      __ptext0 0000                        __ptext1 017A                        __ptext2 0019  
                      __ptext3 0190                        __ptext4 00D7                        __ptext5 01A1  
                      __ptext6 0159                        __ptext7 01AB                        __ptext8 0078  
                      __ptext9 01AE                __size_of_strlen 0011                   __size_of_isr 005F  
                _calcula_CRC16 0019           end_of_initialization 0017         calcula_CRC16@polinomio 0035  
                    _RCSTAbits 0018                        strlen@s 0023                      _PORTBbits 0006  
               ?_calcula_CRC16 0035    __end_of_ConfigureOscillator 01AE                      _TXSTAbits 0098  
       calcula_mensaje_crc@CRC 0048              ??_configura_USART 0076            calcula_CRC16@inival 0039  
               __end_of_strlen 01A1            start_initialization 000D                    __end_of_isr 00D7  
                     CRC16@res 0031                 _cadenarecibida 004E                CRC16@init_value 0024  
              CRC16@exit_value 0028                       ??_strlen 0076                ??_calcula_CRC16 003D  
                  __pbssCOMMON 0076                  __pcstackBANK0 0020   __size_of_calcula_mensaje_crc 0016  
                     ?_InitApp 0070                 __size_of_CRC16 0051                 __size_of_getch 0002  
                 _recibi_datos 004D                   _pasaron_20ms 0077              interrupt_function 0004  
                     _PIE1bits 008C                       _PCONbits 008E                       _PIR1bits 000C  
              _configura_USART 01A1               __size_of_InitApp 0021                  __size_of_main 0031  
 __size_of_ConfigureOscillator 0003            _calcula_mensaje_crc 017A                     _INTCONbits 000B  
      __end_of_configura_USART 01AB                       intlevel1 0000           ?_calcula_mensaje_crc 0044  
        __end_of_calcula_CRC16 0078                       strlen@cp 0024             __CFG_FOSC$INTOSCIO 0000  
            isr@datosrecibidos 0075          ??_calcula_mensaje_crc 0076  
